"""Update post_views table for anonymous tracking

Revision ID: e2ca02e0452e
Revises: 03f5473601c4
Create Date: 2025-08-24 14:28:45.806494

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e2ca02e0452e'
down_revision: Union[str, None] = '03f5473601c4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('post_forks', sa.Column('original_conversation_included', sa.String(), nullable=False, comment='Whether original conversation context was included (true/false as string for consistency)'))
    op.add_column('post_forks', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Last update timestamp'))
    op.alter_column('post_forks', 'user_id',
               existing_type=sa.UUID(),
               comment='User who forked the post',
               existing_nullable=False)
    op.alter_column('post_forks', 'post_id',
               existing_type=sa.UUID(),
               comment='Post that was forked',
               existing_nullable=False)
    op.alter_column('post_forks', 'forked_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='When the fork occurred',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('post_forks', 'conversation_id',
               existing_type=sa.UUID(),
               comment='The new conversation created from the fork',
               existing_nullable=False)
    op.alter_column('post_forks', 'status',
               existing_type=sa.VARCHAR(),
               comment="Fork status: 'active', 'archived', etc.",
               existing_nullable=False,
               existing_server_default=sa.text("'active'::character varying"))
    op.drop_constraint('unique_fork_per_user_post_conversation', 'post_forks', type_='unique')
    op.create_index('idx_post_forks_conversation_id', 'post_forks', ['conversation_id'], unique=False)
    op.create_index('idx_post_forks_forked_at', 'post_forks', ['forked_at'], unique=False)
    op.create_index('idx_post_forks_post_id', 'post_forks', ['post_id'], unique=False)
    op.create_index('idx_post_forks_status', 'post_forks', ['status'], unique=False)
    op.create_index('idx_post_forks_user_id', 'post_forks', ['user_id'], unique=False)
    op.drop_constraint('post_forks_user_id_fkey', 'post_forks', type_='foreignkey')
    op.drop_constraint('post_forks_post_id_fkey', 'post_forks', type_='foreignkey')
    op.drop_constraint('post_forks_conversation_id_fkey', 'post_forks', type_='foreignkey')
    op.create_foreign_key(None, 'post_forks', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'post_forks', 'conversations', ['conversation_id'], ['conversation_id'])
    op.create_foreign_key(None, 'post_forks', 'posts', ['post_id'], ['post_id'])
    op.create_table_comment(
        'post_forks',
        'Tracks post fork relationships for analytics and engagement metrics',
        existing_comment=None,
        schema=None
    )
    op.drop_column('post_forks', 'id')
    op.add_column('post_views', sa.Column('view_id', sa.UUID(), nullable=False, comment='Unique identifier for this view record'))
    op.alter_column('post_views', 'user_id',
               existing_type=sa.UUID(),
               nullable=True,
               comment='User who viewed the post (null for anonymous views)',
               existing_comment='User who viewed the post')
    op.alter_column('posts', 'fork_count',
               existing_type=sa.INTEGER(),
               comment='Number of times this post has been forked',
               existing_nullable=False,
               existing_server_default=sa.text('0'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('posts', 'fork_count',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Number of times this post has been forked',
               existing_nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('post_views', 'user_id',
               existing_type=sa.UUID(),
               nullable=False,
               comment='User who viewed the post',
               existing_comment='User who viewed the post (null for anonymous views)')
    op.drop_column('post_views', 'view_id')
    op.add_column('post_forks', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_table_comment(
        'post_forks',
        existing_comment='Tracks post fork relationships for analytics and engagement metrics',
        schema=None
    )
    op.drop_constraint(None, 'post_forks', type_='foreignkey')
    op.drop_constraint(None, 'post_forks', type_='foreignkey')
    op.drop_constraint(None, 'post_forks', type_='foreignkey')
    op.create_foreign_key('post_forks_conversation_id_fkey', 'post_forks', 'conversations', ['conversation_id'], ['conversation_id'], ondelete='CASCADE')
    op.create_foreign_key('post_forks_post_id_fkey', 'post_forks', 'posts', ['post_id'], ['post_id'], ondelete='CASCADE')
    op.create_foreign_key('post_forks_user_id_fkey', 'post_forks', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_index('idx_post_forks_user_id', table_name='post_forks')
    op.drop_index('idx_post_forks_status', table_name='post_forks')
    op.drop_index('idx_post_forks_post_id', table_name='post_forks')
    op.drop_index('idx_post_forks_forked_at', table_name='post_forks')
    op.drop_index('idx_post_forks_conversation_id', table_name='post_forks')
    op.create_unique_constraint('unique_fork_per_user_post_conversation', 'post_forks', ['user_id', 'post_id', 'conversation_id'])
    op.alter_column('post_forks', 'status',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment="Fork status: 'active', 'archived', etc.",
               existing_nullable=False,
               existing_server_default=sa.text("'active'::character varying"))
    op.alter_column('post_forks', 'conversation_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='The new conversation created from the fork',
               existing_nullable=False)
    op.alter_column('post_forks', 'forked_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='When the fork occurred',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('post_forks', 'post_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Post that was forked',
               existing_nullable=False)
    op.alter_column('post_forks', 'user_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='User who forked the post',
               existing_nullable=False)
    op.drop_column('post_forks', 'updated_at')
    op.drop_column('post_forks', 'original_conversation_included')
    # ### end Alembic commands ###
